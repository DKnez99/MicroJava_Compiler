INFO  10:59:14,302 - Compiling source file: E:\Faculty\PP1\Projekat\Tutorijali\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\syntax_tests\syntax_test_1.mj
INFO  10:59:14,303 - ===========================
INFO  10:59:14,303 - PARSING...
INFO  10:59:14,340 - #2 program
INFO  10:59:14,340 - #47 NoSyntaxErrors
INFO  10:59:14,340 - #47 int
INFO  10:59:14,341 - #47 x
INFO  10:59:14,342 - #27 ,
INFO  10:59:14,342 - #47 y
INFO  10:59:14,342 - #22 [
INFO  10:59:14,342 - #23 ]
INFO  10:59:14,342 - #27 ,
INFO  10:59:14,343 - #47 z
INFO  10:59:14,343 - #26 ;
INFO  10:59:14,343 - #47 char
INFO  10:59:14,343 - #47 cc
INFO  10:59:14,344 - #30 =
ERROR 10:59:14,344 - Syntax error at line 3
INFO  10:59:14,344 - #49 c
INFO  10:59:14,345 - #26 ;
INFO  10:59:14,345 - #3 const
INFO  10:59:14,345 - #47 bool
INFO  10:59:14,345 - #47 mybool
ERROR 10:59:14,345 - Error recovery (level A) in variable declaration at line 3. Recovered to the next , or ;
INFO  10:59:14,346 - #30 =
INFO  10:59:14,347 - #50 false
INFO  10:59:14,347 - #27 ,
INFO  10:59:14,347 - #47 mybool2
INFO  10:59:14,347 - #30 =
INFO  10:59:14,347 - #50 true
INFO  10:59:14,347 - #26 ;
INFO  10:59:14,347 - #3 const
INFO  10:59:14,348 - #47 int
INFO  10:59:14,348 - #47 myint
INFO  10:59:14,348 - #30 =
INFO  10:59:14,348 - #48 12
INFO  10:59:14,348 - #26 ;
INFO  10:59:14,348 - #16 class
INFO  10:59:14,348 - #47 myClass
INFO  10:59:14,348 - #4 extends
INFO  10:59:14,349 - #47 int
INFO  10:59:14,349 - #20 {
INFO  10:59:14,349 - #47 int
INFO  10:59:14,350 - #47 myClassVar1
INFO  10:59:14,350 - #22 [
INFO  10:59:14,350 - #23 ]
INFO  10:59:14,350 - #27 ,
INFO  10:59:14,350 - #47 myClassVar2
INFO  10:59:14,350 - #26 ;
INFO  10:59:14,350 - #20 {
INFO  10:59:14,350 - #15 void
INFO  10:59:14,351 - #47 printSomething
INFO  10:59:14,351 - #24 (
INFO  10:59:14,352 - #25 )
INFO  10:59:14,352 - #20 {
INFO  10:59:14,352 - #13 print
INFO  10:59:14,352 - #24 (
INFO  10:59:14,352 - #40 -
INFO  10:59:14,353 - #47 myClassVar2
INFO  10:59:14,353 - #27 ,
INFO  10:59:14,355 - #48 4
INFO  10:59:14,355 - #25 )
INFO  10:59:14,355 - #26 ;
INFO  10:59:14,355 - #47 testLabel
INFO  10:59:14,355 - #28 :
INFO  10:59:14,356 - #7 do
INFO  10:59:14,356 - #9 break
INFO  10:59:14,356 - #26 ;
INFO  10:59:14,356 - #8 while
INFO  10:59:14,356 - #24 (
INFO  10:59:14,361 - #47 myClassVar2
INFO  10:59:14,361 - #44 ??
INFO  10:59:14,361 - #48 4
INFO  10:59:14,361 - #44 ??
INFO  10:59:14,361 - #48 31
INFO  10:59:14,361 - #25 )
INFO  10:59:14,362 - #26 ;
INFO  10:59:14,362 - #21 }
INFO  10:59:14,363 - #21 }
INFO  10:59:14,363 - #21 }
INFO  10:59:14,364 - #20 {
INFO  10:59:14,364 - #47 int
INFO  10:59:14,364 - #47 k
INFO  10:59:14,364 - #24 (
INFO  10:59:14,364 - #25 )
INFO  10:59:14,364 - #47 int
INFO  10:59:14,364 - #47 c
INFO  10:59:14,364 - #27 ,
INFO  10:59:14,365 - #47 v
INFO  10:59:14,365 - #26 ;
INFO  10:59:14,365 - #47 char
INFO  10:59:14,365 - #47 b
INFO  10:59:14,365 - #27 ,
INFO  10:59:14,365 - #47 m
INFO  10:59:14,365 - #26 ;
INFO  10:59:14,365 - #20 {
INFO  10:59:14,365 - #47 c
INFO  10:59:14,365 - #30 =
INFO  10:59:14,365 - #48 4
INFO  10:59:14,366 - #26 ;
INFO  10:59:14,366 - #11 return
INFO  10:59:14,366 - #47 c
INFO  10:59:14,366 - #39 +
INFO  10:59:14,366 - #48 2
INFO  10:59:14,367 - #39 +
INFO  10:59:14,367 - #48 14
INFO  10:59:14,367 - #40 -
INFO  10:59:14,367 - #48 4
INFO  10:59:14,368 - #41 *
INFO  10:59:14,368 - #48 3
INFO  10:59:14,368 - #26 ;
INFO  10:59:14,369 - #21 }
INFO  10:59:14,369 - #47 int
INFO  10:59:14,369 - #47 main
INFO  10:59:14,369 - #24 (
INFO  10:59:14,369 - #47 int
INFO  10:59:14,369 - #47 v
INFO  10:59:14,369 - #22 [
INFO  10:59:14,370 - #23 ]
INFO  10:59:14,370 - #27 ,
INFO  10:59:14,370 - #47 bool
INFO  10:59:14,370 - #47 q
INFO  10:59:14,370 - #25 )
INFO  10:59:14,370 - #20 {
INFO  10:59:14,370 - #47 y
INFO  10:59:14,370 - #30 =
INFO  10:59:14,370 - #48 2
INFO  10:59:14,370 - #26 ;
INFO  10:59:14,371 - #47 x
INFO  10:59:14,371 - #30 =
INFO  10:59:14,371 - #47 y
INFO  10:59:14,371 - #39 +
INFO  10:59:14,371 - #48 2
INFO  10:59:14,371 - #26 ;
INFO  10:59:14,371 - #47 y
INFO  10:59:14,371 - #30 =
INFO  10:59:14,371 - #47 k
INFO  10:59:14,371 - #24 (
INFO  10:59:14,371 - #25 )
INFO  10:59:14,371 - #39 +
INFO  10:59:14,372 - #48 3
INFO  10:59:14,372 - #26 ;
INFO  10:59:14,372 - #13 print
INFO  10:59:14,372 - #24 (
INFO  10:59:14,372 - #47 y
INFO  10:59:14,372 - #25 )
INFO  10:59:14,372 - #26 ;
INFO  10:59:14,373 - #12 read
INFO  10:59:14,373 - #24 (
INFO  10:59:14,373 - #47 x
INFO  10:59:14,373 - #25 )
INFO  10:59:14,373 - #26 ;
INFO  10:59:14,373 - #11 return
INFO  10:59:14,373 - #47 x
INFO  10:59:14,373 - #26 ;
INFO  10:59:14,373 - #21 }
INFO  10:59:14,373 - #21 }
INFO  10:59:14,374 - ===========================
ERROR 10:59:14,374 - PARSING FAILED!

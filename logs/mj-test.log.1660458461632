INFO  08:27:10,628 - Compiling source file: E:\Faculty\PP1\Projekat\Tutorijali\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test301.mj
INFO  08:27:10,628 - =====================================
INFO  08:27:10,628 - PARSING...
INFO  08:27:10,657 - #2 program
INFO  08:27:10,657 - #47 test301
INFO  08:27:10,657 - #3 const
INFO  08:27:10,658 - #47 bool
INFO  08:27:10,658 - #47 tacno
INFO  08:27:10,658 - #30 =
INFO  08:27:10,658 - #50 true
INFO  08:27:10,658 - #26 ;
INFO  08:27:10,659 - #47 char
INFO  08:27:10,659 - #47 c
INFO  08:27:10,660 - #26 ;
INFO  08:27:10,660 - #47 int
INFO  08:27:10,660 - #47 y
INFO  08:27:10,660 - #26 ;
INFO  08:27:10,660 - #20 {
INFO  08:27:10,660 - #15 void
INFO  08:27:10,661 - #47 main
INFO  08:27:10,662 - #24 (
INFO  08:27:10,662 - #25 )
INFO  08:27:10,662 - #47 bool
INFO  08:27:10,663 - #47 netacno
INFO  08:27:10,663 - #26 ;
INFO  08:27:10,663 - #47 int
INFO  08:27:10,663 - #47 x
INFO  08:27:10,663 - #26 ;
INFO  08:27:10,663 - #20 {
INFO  08:27:10,663 - #12 read
INFO  08:27:10,663 - #24 (
INFO  08:27:10,663 - #47 x
INFO  08:27:10,663 - #25 )
INFO  08:27:10,664 - #26 ;
INFO  08:27:10,664 - #11 return
INFO  08:27:10,664 - #26 ;
INFO  08:27:10,664 - #12 read
INFO  08:27:10,664 - #24 (
INFO  08:27:10,664 - #47 netacno
INFO  08:27:10,664 - #25 )
INFO  08:27:10,665 - #26 ;
INFO  08:27:10,665 - #21 }
INFO  08:27:10,665 - #21 }
INFO  08:27:10,666 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramDeclList(
    ProgramDeclList(
      ProgramDeclList(
        EmptyProgramDeclList(
        ) [EmptyProgramDeclList]
        ProgramDeclConst(
          ConstDecl(
            ConstType(
              Type(
               bool
              ) [Type]
            ) [ConstType]
            ConstListSingle(
              ConstAssignBool(
               tacno
               true
              ) [ConstAssignBool]
            ) [ConstListSingle]
          ) [ConstDecl]
        ) [ProgramDeclConst]
      ) [ProgramDeclList]
      ProgramDeclVar(
        VarDecl(
          VarType(
            Type(
             char
            ) [Type]
          ) [VarType]
          VarListSingle(
            VarSingle(
             c
            ) [VarSingle]
          ) [VarListSingle]
        ) [VarDecl]
      ) [ProgramDeclVar]
    ) [ProgramDeclList]
    ProgramDeclVar(
      VarDecl(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        VarListSingle(
          VarSingle(
           y
          ) [VarSingle]
        ) [VarListSingle]
      ) [VarDecl]
    ) [ProgramDeclVar]
  ) [ProgramDeclList]
  MethodDeclList(
    EmptyMethodDeclList(
    ) [EmptyMethodDeclList]
    MethodDecl(
      MethodReturnTypeVoid(
      ) [MethodReturnTypeVoid]
      MethodName(
       main
      ) [MethodName]
      FormParsNo(
      ) [FormParsNo]
      VarDeclList(
        VarDeclList(
          EmptyVarDeclListNullable(
          ) [EmptyVarDeclListNullable]
          VarDecl(
            VarType(
              Type(
               bool
              ) [Type]
            ) [VarType]
            VarListSingle(
              VarSingle(
               netacno
              ) [VarSingle]
            ) [VarListSingle]
          ) [VarDecl]
        ) [VarDeclList]
        VarDecl(
          VarType(
            Type(
             int
            ) [Type]
          ) [VarType]
          VarListSingle(
            VarSingle(
             x
            ) [VarSingle]
          ) [VarListSingle]
        ) [VarDecl]
      ) [VarDeclList]
      StatementList(
        StatementList(
          StatementList(
            EmptyStatementList(
            ) [EmptyStatementList]
            StatementSingle(
              SingleStatementRead(
                DesignatorDefault(
                 x
                ) [DesignatorDefault]
              ) [SingleStatementRead]
            ) [StatementSingle]
          ) [StatementList]
          StatementSingle(
            SingleStatementReturn(
              ExprNo(
              ) [ExprNo]
            ) [SingleStatementReturn]
          ) [StatementSingle]
        ) [StatementList]
        StatementSingle(
          SingleStatementRead(
            DesignatorDefault(
             netacno
            ) [DesignatorDefault]
          ) [SingleStatementRead]
        ) [StatementSingle]
      ) [StatementList]
    ) [MethodDecl]
  ) [MethodDeclList]
) [Program]
INFO  08:27:10,666 - PARSING SUCCESSFUL!
INFO  08:27:10,666 - =====================================
INFO  08:27:10,666 - SEMANTIC ANALYSIS...
INFO  08:27:10,685 - Info at line 4: Created new constant bool tacno. ObjNode[Name = tacno, Type = bool, Kind = constant, Value = 1, Level = 0]
INFO  08:27:10,685 - Info at line 5: Created new variable char c. ObjNode[Name = c, Type = char, Kind = variable, Address = 0, Level = 0]
INFO  08:27:10,685 - Info at line 6: Created new variable int y. ObjNode[Name = y, Type = int, Kind = variable, Address = 1, Level = 0]
INFO  08:27:10,685 - Info at line 8: Entering method void main.
INFO  08:27:10,685 - Info at line 9: Created new variable bool netacno. ObjNode[Name = netacno, Type = bool, Kind = variable, Address = 0, Level = 1]
INFO  08:27:10,685 - Info at line 10: Created new variable int x. ObjNode[Name = x, Type = int, Kind = variable, Address = 1, Level = 1]
INFO  08:27:10,685 - Info at line 12: Accessed a variable int x.
INFO  08:27:10,685 - Info at line 14: Accessed a variable bool netacno.
INFO  08:27:10,686 - SEMANTIC ANALYSIS SUCCESSFUL!
INFO  08:27:10,686 - =====================================
INFO  08:27:10,686 - CODE GENERATION...
INFO  08:27:10,688 - CODE GENERATION SUCCESSFUL!
INFO  08:27:10,688 - Results saved in the output file test\test301.obj.

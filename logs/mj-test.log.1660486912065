INFO  16:21:26,852 - Compiling source file: E:\Faculty\PP1\Projekat\Tutorijali\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test301.mj
INFO  16:21:26,853 - =====================================
INFO  16:21:26,853 - PARSING...
INFO  16:21:26,881 - #2 program
INFO  16:21:26,881 - #47 test301
INFO  16:21:26,881 - #3 const
INFO  16:21:26,882 - #47 bool
INFO  16:21:26,882 - #47 tacno
INFO  16:21:26,882 - #30 =
INFO  16:21:26,882 - #50 true
INFO  16:21:26,883 - #26 ;
INFO  16:21:26,883 - #47 char
INFO  16:21:26,883 - #47 c
INFO  16:21:26,884 - #26 ;
INFO  16:21:26,884 - #47 int
INFO  16:21:26,884 - #47 y
INFO  16:21:26,884 - #26 ;
INFO  16:21:26,884 - #20 {
INFO  16:21:26,884 - #15 void
INFO  16:21:26,885 - #47 main
INFO  16:21:26,886 - #24 (
INFO  16:21:26,886 - #25 )
INFO  16:21:26,886 - #47 bool
INFO  16:21:26,887 - #47 netacno
INFO  16:21:26,887 - #26 ;
INFO  16:21:26,887 - #47 int
INFO  16:21:26,887 - #47 x
INFO  16:21:26,887 - #27 ,
INFO  16:21:26,887 - #47 y
INFO  16:21:26,887 - #22 [
INFO  16:21:26,887 - #23 ]
INFO  16:21:26,887 - #26 ;
INFO  16:21:26,887 - #47 char
INFO  16:21:26,887 - #47 c
INFO  16:21:26,887 - #26 ;
INFO  16:21:26,888 - #20 {
INFO  16:21:26,888 - #47 x
INFO  16:21:26,888 - #30 =
INFO  16:21:26,888 - #40 -
INFO  16:21:26,889 - #48 5
INFO  16:21:26,889 - #40 -
INFO  16:21:26,890 - #48 7
INFO  16:21:26,890 - #26 ;
INFO  16:21:26,890 - #13 print
INFO  16:21:26,891 - #24 (
INFO  16:21:26,891 - #47 x
INFO  16:21:26,891 - #25 )
INFO  16:21:26,891 - #26 ;
INFO  16:21:26,891 - #47 x
INFO  16:21:26,891 - #30 =
INFO  16:21:26,891 - #48 5
INFO  16:21:26,891 - #26 ;
INFO  16:21:26,891 - #13 print
INFO  16:21:26,891 - #24 (
INFO  16:21:26,891 - #47 x
INFO  16:21:26,891 - #27 ,
INFO  16:21:26,891 - #48 5
INFO  16:21:26,891 - #25 )
INFO  16:21:26,892 - #26 ;
INFO  16:21:26,892 - #11 return
INFO  16:21:26,892 - #26 ;
INFO  16:21:26,892 - #12 read
INFO  16:21:26,892 - #24 (
INFO  16:21:26,892 - #47 netacno
INFO  16:21:26,892 - #25 )
INFO  16:21:26,892 - #26 ;
INFO  16:21:26,892 - #21 }
INFO  16:21:26,892 - #21 }
INFO  16:21:26,894 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramDeclList(
    ProgramDeclList(
      ProgramDeclList(
        EmptyProgramDeclList(
        ) [EmptyProgramDeclList]
        ProgramDeclConst(
          ConstDecl(
            ConstType(
              Type(
               bool
              ) [Type]
            ) [ConstType]
            ConstListSingle(
              ConstAssignBool(
               tacno
               true
              ) [ConstAssignBool]
            ) [ConstListSingle]
          ) [ConstDecl]
        ) [ProgramDeclConst]
      ) [ProgramDeclList]
      ProgramDeclVar(
        VarDecl(
          VarType(
            Type(
             char
            ) [Type]
          ) [VarType]
          VarListSingle(
            VarSingle(
             c
            ) [VarSingle]
          ) [VarListSingle]
        ) [VarDecl]
      ) [ProgramDeclVar]
    ) [ProgramDeclList]
    ProgramDeclVar(
      VarDecl(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        VarListSingle(
          VarSingle(
           y
          ) [VarSingle]
        ) [VarListSingle]
      ) [VarDecl]
    ) [ProgramDeclVar]
  ) [ProgramDeclList]
  MethodDeclList(
    EmptyMethodDeclList(
    ) [EmptyMethodDeclList]
    MethodDecl(
      MethodReturnTypeVoid(
      ) [MethodReturnTypeVoid]
      MethodName(
       main
      ) [MethodName]
      FormParsNo(
      ) [FormParsNo]
      VarDeclList(
        VarDeclList(
          VarDeclList(
            EmptyVarDeclListNullable(
            ) [EmptyVarDeclListNullable]
            VarDecl(
              VarType(
                Type(
                 bool
                ) [Type]
              ) [VarType]
              VarListSingle(
                VarSingle(
                 netacno
                ) [VarSingle]
              ) [VarListSingle]
            ) [VarDecl]
          ) [VarDeclList]
          VarDecl(
            VarType(
              Type(
               int
              ) [Type]
            ) [VarType]
            VarListMany(
              VarListSingle(
                VarSingle(
                 x
                ) [VarSingle]
              ) [VarListSingle]
              VarArray(
               y
              ) [VarArray]
            ) [VarListMany]
          ) [VarDecl]
        ) [VarDeclList]
        VarDecl(
          VarType(
            Type(
             char
            ) [Type]
          ) [VarType]
          VarListSingle(
            VarSingle(
             c
            ) [VarSingle]
          ) [VarListSingle]
        ) [VarDecl]
      ) [VarDeclList]
      StatementList(
        StatementList(
          StatementList(
            StatementList(
              StatementList(
                StatementList(
                  EmptyStatementList(
                  ) [EmptyStatementList]
                  StatementSingle(
                    SingleStatementDesignatorStatement(
                      DesignatorStatementAssign(
                        DesignatorDefault(
                         x
                        ) [DesignatorDefault]
                        Assign(
                        ) [Assign]
                        ExprNegTerm(
                          Term(
                            FactorConstNum(
                             5
                            ) [FactorConstNum]
                            EmptyMulopFactorList(
                            ) [EmptyMulopFactorList]
                          ) [Term]
                          AddopTermList(
                            EmptyAddopTermList(
                            ) [EmptyAddopTermList]
                            Minus(
                            ) [Minus]
                            Term(
                              FactorConstNum(
                               7
                              ) [FactorConstNum]
                              EmptyMulopFactorList(
                              ) [EmptyMulopFactorList]
                            ) [Term]
                          ) [AddopTermList]
                        ) [ExprNegTerm]
                      ) [DesignatorStatementAssign]
                    ) [SingleStatementDesignatorStatement]
                  ) [StatementSingle]
                ) [StatementList]
                StatementSingle(
                  SingleStatementPrint(
                    ExprTerm(
                      Term(
                        FactorDesignator(
                          DesignatorDefault(
                           x
                          ) [DesignatorDefault]
                        ) [FactorDesignator]
                        EmptyMulopFactorList(
                        ) [EmptyMulopFactorList]
                      ) [Term]
                      EmptyAddopTermList(
                      ) [EmptyAddopTermList]
                    ) [ExprTerm]
                  ) [SingleStatementPrint]
                ) [StatementSingle]
              ) [StatementList]
              StatementSingle(
                SingleStatementDesignatorStatement(
                  DesignatorStatementAssign(
                    DesignatorDefault(
                     x
                    ) [DesignatorDefault]
                    Assign(
                    ) [Assign]
                    ExprTerm(
                      Term(
                        FactorConstNum(
                         5
                        ) [FactorConstNum]
                        EmptyMulopFactorList(
                        ) [EmptyMulopFactorList]
                      ) [Term]
                      EmptyAddopTermList(
                      ) [EmptyAddopTermList]
                    ) [ExprTerm]
                  ) [DesignatorStatementAssign]
                ) [SingleStatementDesignatorStatement]
              ) [StatementSingle]
            ) [StatementList]
            StatementSingle(
              SingleStatementPrintWithNumber(
                ExprTerm(
                  Term(
                    FactorDesignator(
                      DesignatorDefault(
                       x
                      ) [DesignatorDefault]
                    ) [FactorDesignator]
                    EmptyMulopFactorList(
                    ) [EmptyMulopFactorList]
                  ) [Term]
                  EmptyAddopTermList(
                  ) [EmptyAddopTermList]
                ) [ExprTerm]
               5
              ) [SingleStatementPrintWithNumber]
            ) [StatementSingle]
          ) [StatementList]
          StatementSingle(
            SingleStatementReturn(
              ExprNo(
              ) [ExprNo]
            ) [SingleStatementReturn]
          ) [StatementSingle]
        ) [StatementList]
        StatementSingle(
          SingleStatementRead(
            DesignatorDefault(
             netacno
            ) [DesignatorDefault]
          ) [SingleStatementRead]
        ) [StatementSingle]
      ) [StatementList]
    ) [MethodDecl]
  ) [MethodDeclList]
) [Program]
INFO  16:21:26,895 - PARSING SUCCESSFUL!
INFO  16:21:26,898 - =====================================
INFO  16:21:26,898 - SEMANTIC ANALYSIS...
INFO  16:21:26,916 - Info at line 4: Created new constant bool tacno. ObjNode[Name = tacno, Type = bool, Kind = constant, Value = 1, Level = 0]
INFO  16:21:26,916 - Info at line 5: Created new variable char c. ObjNode[Name = c, Type = char, Kind = variable, Address = 0, Level = 0]
INFO  16:21:26,916 - Info at line 6: Created new variable int y. ObjNode[Name = y, Type = int, Kind = variable, Address = 1, Level = 0]
INFO  16:21:26,916 - Info at line 8: Entering method void main.
INFO  16:21:26,916 - Info at line 9: Created new variable bool netacno. ObjNode[Name = netacno, Type = bool, Kind = variable, Address = 0, Level = 1]
INFO  16:21:26,916 - Info at line 10: Created new variable int x. ObjNode[Name = x, Type = int, Kind = variable, Address = 1, Level = 1]
INFO  16:21:26,916 - Info at line 10: Created new variable int y[]. ObjNode[Name = y, Type = array, Kind = variable, Address = 2, Level = 1]
INFO  16:21:26,916 - Info at line 11: Created new variable char c. ObjNode[Name = c, Type = char, Kind = variable, Address = 3, Level = 1]
INFO  16:21:26,916 - Info at line 13: Accessed a variable int x.
INFO  16:21:26,916 - Info at line 14: Accessed a variable int x.
INFO  16:21:26,916 - Info at line 15: Accessed a variable int x.
INFO  16:21:26,916 - Info at line 16: Accessed a variable int x.
INFO  16:21:26,916 - Info at line 18: Accessed a variable bool netacno.
INFO  16:21:26,916 - SEMANTIC ANALYSIS SUCCESSFUL!
INFO  16:21:26,916 - =====================================
INFO  16:21:26,917 - CODE GENERATION...
INFO  16:21:26,919 - CODE GENERATION SUCCESSFUL!
INFO  16:21:26,919 - Results saved in the output file test\test301.obj.

INFO  07:31:39,315 - Compiling source file: E:\Faculty\PP1\Projekat\Tutorijali\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test301.mj
INFO  07:31:39,316 - =====================================
INFO  07:31:39,316 - PARSING...
INFO  07:31:39,345 - #2 program
INFO  07:31:39,345 - #47 test301
INFO  07:31:39,345 - #3 const
INFO  07:31:39,345 - #47 bool
INFO  07:31:39,346 - #47 tacno
INFO  07:31:39,346 - #30 =
INFO  07:31:39,346 - #50 true
INFO  07:31:39,346 - #26 ;
INFO  07:31:39,347 - #47 char
INFO  07:31:39,347 - #47 c
INFO  07:31:39,348 - #26 ;
INFO  07:31:39,348 - #47 int
INFO  07:31:39,348 - #47 y
INFO  07:31:39,348 - #26 ;
INFO  07:31:39,348 - #20 {
INFO  07:31:39,348 - #15 void
INFO  07:31:39,349 - #47 main
INFO  07:31:39,350 - #24 (
INFO  07:31:39,350 - #25 )
INFO  07:31:39,351 - #47 bool
INFO  07:31:39,351 - #47 netacno
INFO  07:31:39,351 - #26 ;
INFO  07:31:39,351 - #47 int
INFO  07:31:39,351 - #47 x
INFO  07:31:39,351 - #27 ,
INFO  07:31:39,351 - #47 a
INFO  07:31:39,351 - #27 ,
INFO  07:31:39,351 - #47 b
INFO  07:31:39,351 - #26 ;
INFO  07:31:39,351 - #47 char
INFO  07:31:39,352 - #47 c
INFO  07:31:39,352 - #26 ;
INFO  07:31:39,352 - #20 {
INFO  07:31:39,352 - #47 a
INFO  07:31:39,352 - #30 =
INFO  07:31:39,352 - #48 4
INFO  07:31:39,353 - #26 ;
INFO  07:31:39,354 - #47 b
INFO  07:31:39,354 - #30 =
INFO  07:31:39,354 - #48 5
INFO  07:31:39,354 - #26 ;
INFO  07:31:39,354 - #47 x
INFO  07:31:39,354 - #30 =
INFO  07:31:39,354 - #47 a
INFO  07:31:39,354 - #44 ??
INFO  07:31:39,355 - #47 b
INFO  07:31:39,355 - #40 -
INFO  07:31:39,355 - #48 5
INFO  07:31:39,355 - #44 ??
INFO  07:31:39,355 - #48 12
INFO  07:31:39,355 - #26 ;
INFO  07:31:39,356 - #13 print
INFO  07:31:39,356 - #24 (
INFO  07:31:39,356 - #47 x
INFO  07:31:39,356 - #25 )
INFO  07:31:39,356 - #26 ;
INFO  07:31:39,356 - #21 }
INFO  07:31:39,356 - #21 }
INFO  07:31:39,359 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramDeclList(
    ProgramDeclList(
      ProgramDeclList(
        EmptyProgramDeclList(
        ) [EmptyProgramDeclList]
        ProgramDeclConst(
          ConstDecl(
            ConstType(
              Type(
               bool
              ) [Type]
            ) [ConstType]
            ConstListSingle(
              ConstAssignBool(
               tacno
               true
              ) [ConstAssignBool]
            ) [ConstListSingle]
          ) [ConstDecl]
        ) [ProgramDeclConst]
      ) [ProgramDeclList]
      ProgramDeclVar(
        VarDecl(
          VarType(
            Type(
             char
            ) [Type]
          ) [VarType]
          VarListSingle(
            VarSingle(
             c
            ) [VarSingle]
          ) [VarListSingle]
        ) [VarDecl]
      ) [ProgramDeclVar]
    ) [ProgramDeclList]
    ProgramDeclVar(
      VarDecl(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        VarListSingle(
          VarSingle(
           y
          ) [VarSingle]
        ) [VarListSingle]
      ) [VarDecl]
    ) [ProgramDeclVar]
  ) [ProgramDeclList]
  MethodDeclList(
    EmptyMethodDeclList(
    ) [EmptyMethodDeclList]
    MethodDecl(
      MethodReturnTypeVoid(
      ) [MethodReturnTypeVoid]
      MethodName(
       main
      ) [MethodName]
      FormParsNo(
      ) [FormParsNo]
      VarDeclList(
        VarDeclList(
          VarDeclList(
            EmptyVarDeclListNullable(
            ) [EmptyVarDeclListNullable]
            VarDecl(
              VarType(
                Type(
                 bool
                ) [Type]
              ) [VarType]
              VarListSingle(
                VarSingle(
                 netacno
                ) [VarSingle]
              ) [VarListSingle]
            ) [VarDecl]
          ) [VarDeclList]
          VarDecl(
            VarType(
              Type(
               int
              ) [Type]
            ) [VarType]
            VarListMany(
              VarListMany(
                VarListSingle(
                  VarSingle(
                   x
                  ) [VarSingle]
                ) [VarListSingle]
                VarSingle(
                 a
                ) [VarSingle]
              ) [VarListMany]
              VarSingle(
               b
              ) [VarSingle]
            ) [VarListMany]
          ) [VarDecl]
        ) [VarDeclList]
        VarDecl(
          VarType(
            Type(
             char
            ) [Type]
          ) [VarType]
          VarListSingle(
            VarSingle(
             c
            ) [VarSingle]
          ) [VarListSingle]
        ) [VarDecl]
      ) [VarDeclList]
      StatementList(
        StatementList(
          StatementList(
            StatementList(
              EmptyStatementList(
              ) [EmptyStatementList]
              StatementSingle(
                SingleStatementDesignatorStatement(
                  DesignatorStatementAssign(
                    DesignatorDefault(
                     a
                    ) [DesignatorDefault]
                    Assign(
                    ) [Assign]
                    ExprTerm(
                      Term(
                        FactorConstNum(
                         4
                        ) [FactorConstNum]
                        EmptyMulopFactorList(
                        ) [EmptyMulopFactorList]
                      ) [Term]
                      EmptyAddopTermList(
                      ) [EmptyAddopTermList]
                    ) [ExprTerm]
                  ) [DesignatorStatementAssign]
                ) [SingleStatementDesignatorStatement]
              ) [StatementSingle]
            ) [StatementList]
            StatementSingle(
              SingleStatementDesignatorStatement(
                DesignatorStatementAssign(
                  DesignatorDefault(
                   b
                  ) [DesignatorDefault]
                  Assign(
                  ) [Assign]
                  ExprTerm(
                    Term(
                      FactorConstNum(
                       5
                      ) [FactorConstNum]
                      EmptyMulopFactorList(
                      ) [EmptyMulopFactorList]
                    ) [Term]
                    EmptyAddopTermList(
                    ) [EmptyAddopTermList]
                  ) [ExprTerm]
                ) [DesignatorStatementAssign]
              ) [SingleStatementDesignatorStatement]
            ) [StatementSingle]
          ) [StatementList]
          StatementSingle(
            SingleStatementDesignatorStatement(
              DesignatorStatementAssign(
                DesignatorDefault(
                 x
                ) [DesignatorDefault]
                Assign(
                ) [Assign]
                ExprQQ(
                  Term(
                    FactorDesignator(
                      DesignatorDefault(
                       a
                      ) [DesignatorDefault]
                    ) [FactorDesignator]
                    EmptyMulopFactorList(
                    ) [EmptyMulopFactorList]
                  ) [Term]
                  EmptyAddopTermList(
                  ) [EmptyAddopTermList]
                  ExprQQ(
                    Term(
                      FactorDesignator(
                        DesignatorDefault(
                         b
                        ) [DesignatorDefault]
                      ) [FactorDesignator]
                      EmptyMulopFactorList(
                      ) [EmptyMulopFactorList]
                    ) [Term]
                    AddopTermList(
                      EmptyAddopTermList(
                      ) [EmptyAddopTermList]
                      Minus(
                      ) [Minus]
                      Term(
                        FactorConstNum(
                         5
                        ) [FactorConstNum]
                        EmptyMulopFactorList(
                        ) [EmptyMulopFactorList]
                      ) [Term]
                    ) [AddopTermList]
                    ExprTerm(
                      Term(
                        FactorConstNum(
                         12
                        ) [FactorConstNum]
                        EmptyMulopFactorList(
                        ) [EmptyMulopFactorList]
                      ) [Term]
                      EmptyAddopTermList(
                      ) [EmptyAddopTermList]
                    ) [ExprTerm]
                  ) [ExprQQ]
                ) [ExprQQ]
              ) [DesignatorStatementAssign]
            ) [SingleStatementDesignatorStatement]
          ) [StatementSingle]
        ) [StatementList]
        StatementSingle(
          SingleStatementPrint(
            ExprTerm(
              Term(
                FactorDesignator(
                  DesignatorDefault(
                   x
                  ) [DesignatorDefault]
                ) [FactorDesignator]
                EmptyMulopFactorList(
                ) [EmptyMulopFactorList]
              ) [Term]
              EmptyAddopTermList(
              ) [EmptyAddopTermList]
            ) [ExprTerm]
          ) [SingleStatementPrint]
        ) [StatementSingle]
      ) [StatementList]
    ) [MethodDecl]
  ) [MethodDeclList]
) [Program]
INFO  07:31:39,359 - PARSING SUCCESSFUL!
INFO  07:31:39,360 - =====================================
INFO  07:31:39,360 - SEMANTIC ANALYSIS...
INFO  07:31:39,374 - Info at line 4: Created new constant bool tacno. ObjNode[Name = tacno, Type = bool, Kind = constant, Value = 1, Level = 0]
INFO  07:31:39,375 - Info at line 5: Created new variable char c. ObjNode[Name = c, Type = char, Kind = variable, Address = 0, Level = 0]
INFO  07:31:39,375 - Info at line 6: Created new variable int y. ObjNode[Name = y, Type = int, Kind = variable, Address = 1, Level = 0]
INFO  07:31:39,375 - Info at line 8: Entering method void main.
INFO  07:31:39,378 - Info at line 9: Created new variable bool netacno. ObjNode[Name = netacno, Type = bool, Kind = variable, Address = 0, Level = 1]
INFO  07:31:39,379 - Info at line 10: Created new variable int x. ObjNode[Name = x, Type = int, Kind = variable, Address = 1, Level = 1]
INFO  07:31:39,379 - Info at line 10: Created new variable int a. ObjNode[Name = a, Type = int, Kind = variable, Address = 2, Level = 1]
INFO  07:31:39,379 - Info at line 10: Created new variable int b. ObjNode[Name = b, Type = int, Kind = variable, Address = 3, Level = 1]
INFO  07:31:39,379 - Info at line 11: Created new variable char c. ObjNode[Name = c, Type = char, Kind = variable, Address = 4, Level = 1]
INFO  07:31:39,379 - Info at line 13: Accessed a variable int a.
INFO  07:31:39,379 - Info at line 14: Accessed a variable int b.
INFO  07:31:39,379 - Info at line 15: Accessed a variable int x.
INFO  07:31:39,379 - Info at line 15: Accessed a variable int a.
INFO  07:31:39,379 - Info at line 15: Accessed a variable int b.
INFO  07:31:39,379 - Info at line 16: Accessed a variable int x.
INFO  07:31:39,379 - SEMANTIC ANALYSIS SUCCESSFUL!
INFO  07:31:39,379 - =====================================
INFO  07:31:39,379 - CODE GENERATION...
INFO  07:31:39,382 - CODE GENERATION SUCCESSFUL!
INFO  07:31:39,382 - Results saved in the output file test\test301.obj.
